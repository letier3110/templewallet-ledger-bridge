import e from"@ledgerhq/hw-transport";var s;!function(e){e.ExchangeRequest="THANOS_LEDGER_BRIDGE_EXCHANGE_REQUEST",e.ExchangeResponse="THANOS_LEDGER_BRIDGE_EXCHANGE_RESPONSE",e.ErrorResponse="THANOS_LEDGER_ERROR_RESPONSE"}(s||(s={}));class t extends e{constructor(e){super(),this.iframe=e}static async isSupported(){return!0}static async list(){return[]}static listen(){return{unsubscribe:()=>{}}}static async open(e){const s=document.createElement("iframe");return s.src=e,document.head.appendChild(s),await new Promise(e=>{const t=()=>{e(),s.removeEventListener("load",t)};s.addEventListener("load",t)}),new t(s)}get origin(){const e=this.iframe.src.split("/");return e.splice(-1,1),e.join("/")}exchange(e){var t=this;return new Promise(async function(n,r){var i,a;const o=t.exchangeTimeout,c={type:s.ExchangeRequest,apdu:e.toString("hex"),scrambleKey:null===(i=t.scrambleKey)||void 0===i?void 0:i.toString("ascii"),exchangeTimeout:o};null===(a=t.iframe.contentWindow)||void 0===a||a.postMessage(c,"*");const E=e=>{if(e.origin!==t.origin)return;const i=e.data;switch(null==i?void 0:i.type){case s.ExchangeResponse:n(Buffer.from(i.result,"hex"));break;case s.ErrorResponse:r(i.message)}window.removeEventListener("message",E)};window.addEventListener("message",E)})}setScrambleKey(e){this.scrambleKey=Buffer.from(e,"ascii")}async close(){document.head.removeChild(this.iframe)}}export{s as BridgeMessageType,t as LedgerThanosBridgeTransport};
//# sourceMappingURL=index.modern.js.map
