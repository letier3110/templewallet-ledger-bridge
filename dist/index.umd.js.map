{"version":3,"file":"index.umd.js","sources":["../src/types.ts","../src/client.ts"],"sourcesContent":["export type BridgeRequest = BridgeExchangeRequest;\n\nexport type BridgeResponse = BridgeExchangeResponse | BridgeErrorResponse;\n\nexport interface BridgeExchangeRequest extends BridgeMessageBase {\n  type: BridgeMessageType.ExchangeRequest;\n  apdu: string;\n  scrambleKey?: string;\n  exchangeTimeout?: number;\n}\n\nexport interface BridgeExchangeResponse extends BridgeMessageBase {\n  type: BridgeMessageType.ExchangeResponse;\n  result: string;\n}\n\nexport interface BridgeErrorResponse extends BridgeMessageBase {\n  type: BridgeMessageType.ErrorResponse;\n  message: string;\n}\n\nexport interface BridgeMessageBase {\n  type: BridgeMessageType;\n}\n\nexport enum BridgeMessageType {\n  ExchangeRequest = \"THANOS_LEDGER_BRIDGE_EXCHANGE_REQUEST\",\n  ExchangeResponse = \"THANOS_LEDGER_BRIDGE_EXCHANGE_RESPONSE\",\n  ErrorResponse = \"THANOS_LEDGER_ERROR_RESPONSE\",\n}\n","import Transport from \"@ledgerhq/hw-transport\";\nimport {\n  BridgeExchangeRequest,\n  BridgeMessageType,\n  BridgeResponse,\n} from \"./types\";\n\nexport class TransportThanosBridge extends Transport {\n  static async open(bridgeUrl: string) {\n    const iframe = document.createElement(\"iframe\");\n    iframe.src = bridgeUrl;\n    document.head.appendChild(iframe);\n    return new TransportThanosBridge(iframe, bridgeUrl);\n  }\n\n  scrambleKey?: Buffer;\n  unwrap?: boolean;\n\n  constructor(private iframe: HTMLIFrameElement, private bridgeUrl: string) {\n    super();\n  }\n\n  exchange(apdu: Buffer) {\n    return new Promise<Buffer>((resolve, reject) => {\n      const msg: BridgeExchangeRequest = {\n        type: BridgeMessageType.ExchangeRequest,\n        apdu: apdu.toString(),\n        scrambleKey: this.scrambleKey?.toString(),\n        exchangeTimeout: (this as any).exchangeTimeout,\n      };\n      this.iframe.contentWindow?.postMessage(msg, \"*\");\n\n      const handleMessage = (evt: MessageEvent) => {\n        if (evt.origin !== this.getOrigin()) {\n          return;\n        }\n\n        const res: BridgeResponse = evt.data;\n        switch (res?.type) {\n          case BridgeMessageType.ExchangeResponse:\n            resolve(Buffer.from(res.result));\n            break;\n\n          case BridgeMessageType.ErrorResponse:\n            reject(res.message);\n            break;\n        }\n\n        window.removeEventListener(\"message\", handleMessage);\n      };\n\n      window.addEventListener(\"message\", handleMessage);\n    });\n  }\n\n  setScrambleKey(scrambleKey: string) {\n    this.scrambleKey = Buffer.from(scrambleKey, \"ascii\");\n  }\n\n  setUnwrap(unwrap: boolean) {\n    this.unwrap = unwrap;\n  }\n\n  async close() {\n    document.head.removeChild(this.iframe);\n  }\n\n  private getOrigin() {\n    const tmp = this.bridgeUrl.split(\"/\");\n    tmp.splice(-1, 1);\n    return tmp.join(\"/\");\n  }\n}\n"],"names":["BridgeMessageType","iframe","bridgeUrl","_this","TransportThanosBridge","open","document","createElement","src","head","appendChild","exchange","apdu","Promise","resolve","reject","msg","type","ExchangeRequest","toString","scrambleKey","_this2","_this2$scrambleKey","exchangeTimeout","contentWindow","postMessage","window","addEventListener","handleMessage","evt","origin","getOrigin","res","data","ExchangeResponse","Buffer","from","result","ErrorResponse","message","removeEventListener","setScrambleKey","this","setUnwrap","unwrap","close","removeChild","tmp","split","splice","join","Transport"],"mappings":"2QAyBA,IAAYA,sEAAAA,EAAAA,sBAAAA,iFAEVA,4DACAA,2FCVA,WAAoBC,EAAmCC,gBACrDC,6BADkBF,EAAmCE,YAAAD,2FAXzDE,EACeC,cAAKH,OAChB,IAAMD,EAASK,SAASC,cAAc,UAGtC,OAFAN,EAAOO,IAAMN,EACbI,SAASG,KAAKC,YAAYT,mBACnB,IAAIG,EAAsBH,EAAQC,IAL7C,+DAeES,SAAA,SAASC,cACP,WAAWC,QAAgB,SAACC,EAASC,WAC7BC,EAA6B,CACjCC,KAAMjB,oBAAkBkB,gBACxBN,KAAMA,EAAKO,WACXC,sBAAaC,EAAKD,gCAALE,EAAkBH,WAC/BI,gBAAkBF,EAAaE,2BAEjCF,EAAKpB,OAAOuB,8BAAeC,YAAYT,EAAK,KAqB5CU,OAAOC,iBAAiB,UAnBF,SAAhBC,EAAiBC,GACrB,GAAIA,EAAIC,SAAWT,EAAKU,YAAxB,CAIA,IAAMC,EAAsBH,EAAII,KAChC,OAAQD,MAAAA,SAAAA,EAAKf,MACX,KAAKjB,oBAAkBkC,iBACrBpB,EAAQqB,OAAOC,KAAKJ,EAAIK,SACxB,MAEF,KAAKrC,oBAAkBsC,cACrBvB,EAAOiB,EAAIO,SAIfb,OAAOc,oBAAoB,UAAWZ,WAO5Ca,eAAA,SAAerB,GACbsB,KAAKtB,YAAce,OAAOC,KAAKhB,EAAa,YAG9CuB,UAAA,SAAUC,GACRF,KAAKE,OAASA,KAGVC,4BACJvC,SAASG,KAAKqC,YAAYJ,KAAKzC,0BAzDnC,sCA4DU8B,UAAA,WACN,IAAMgB,EAAML,KAAKxC,UAAU8C,MAAM,KAEjC,OADAD,EAAIE,QAAQ,EAAG,GACRF,EAAIG,KAAK,SA/DuBC"}